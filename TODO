FEATURES needed to start using the editor in daily work:

- File saving (file format): Don't save & load files in markup format
  used in editor. It can change in future.

- Project manager: It is first enough to have mawe files in moe project
  manager. But for workspaces and tabbed editing, we need built-in project
  manager.

- File export: RTF, text (for texifier)

- Settings editor

- Header info editor

- Path for project manager

- We could add UUID to moe files, too. UUID could help linking documents
  together.

-------------------------------------------------------------------------------

Other features:

- Some sort of "loopback" device to test file saving and loading:
  save a file, and load it back to editor. It would be great if that
  would be as complete chain as possible. I have experience how nasty
  bugs are if they are in the document save part, making corrupted files.

- Drag'n'drop mawe and moe files to editor. In case you work with file
  manager or similar.

- Cursor marks? For example, Alt-1 to place a mark, and Shit-Alt-1 to go
  back.

- History entry to file: This can be used to track history, e.g.
  writing competitions where the text has been sent.

- Save list of open tabs for restoring: remember errors

- Add error handling when loading documents

- When choosing with grab, show the selections in the listbox

- Postpone: We can now support just one-part files

- Postpone: We don't need versioning yet.

- Postpone: We can live without being able to mix buffers from several
  documents together in one view. That is, it is enough if we can choose
  between doc's draft and notes buffers.

- Search and replace: it is very useful feature I have missed in moe a lot

- Separate configs to local and global ones. For example, you may want
  to store workset configurations to a shared drive, but keep window settings
  on local machine.

- Many current software have combined open/new window. Many of them are
  interesting and full of action. There's many ways to open things
  (open folder, clone from repo, choose recent, start new). It wouldn't
  be bad idea, right?
  
  * Absolutely this feature, new button inside open dialog.

- A synopsis editor would be cool, I think. I already sketched it with
  moe, but it has been underused.

-------------------------------------------------------------------------------

Problematic issue: Single doc vs split view:

- In split view, you need lots of space for both docs.

- But when having just index at left, it can't fill the space.

- Could there be some sort of feature, "left" and "right" gutter for the
  doc:
  
  - When in single doc mode, both gutters are visible: index at left
  
  - When in split view, gutters are invisible and the pane is in different
    position.
    
  - Basically: We are not that interested in pane position: we are much
    more interested in doc view width!!!

  - Split view is absolutely mandatory feature.

  - Just find out some ideas for right gutter when split view is not
    used, and index is visible.

-------------------------------------------------------------------------------

FIX:

- There is a bug in refreshing scene word counters. Track it down and fix it.

- We can not just switch buffer to textview - Undo/redo will not work in
  that case. Instead, when switching buffers, we need to create new views.

- We need reimplement Alt-Up/Down to move scenes, not lines.

- Cut & paste scene headers has quirks: Consider these:

  * Cancel cut and paste, if selection contains protected areas
    (folded scenes)
    
  * Except if selection bounds are at scene bounds, that is, you
    have selected entire scenes.
    
- Make:

  * Ctrl-up, Ctrl-down: move paragraph up / down
  
  * Alt-up, Alt-down: move scene up / down - if you have selections
    (preferably whole scenes), move scenes with cursor.

-------------------------------------------------------------------------------

QUIRKS ETC:

- I need to figure out suitable mechanics for managing hidden text tags.
  Whenever the scene header with "folded" mark is detached from hidden
  text, the hide tag should be removed.

-------------------------------------------------------------------------------

TODO:

- When we have loaded a moe file, it would be good if mawe would suggest
  to save it to same direction with .mawe extension. At least it could start
  from that directory. Lets make it so, that "Save" works as "Save as" if
  the file does not exist yet.

- Move listview's selected row when moving around the text

- Text <-> List swapping using Alt-left/right (instead of Alt-1/2 used at the
  moment)

- Selecting & moving scenes in listview

- Texifier to version control

- It could be good, if first line would be reserved for title. Now, this
  title needs to be updated to either header, or to part. Well, tested it and
  not necessarily...

- We could preserve e.g. "## **" to 'chapter' header.

- Interesting... It is much more difficult to import text, latex and RTF
  files directly to mawe as it was with moe.

-------------------------------------------------------------------------------

DONE:

- DONE: Key combinations, e.g. Alt-A + Alt-F -> Fold all

- DONE: Fold / Unfold all

- FIXED: Move line (Alt-up, alt-down) does not work with markers. Moving
  header line over another will duplicate the mark.

  We now remove marks from updated regions, and recreate them after update.

- FIXED: (Fix available) GtkSourceView crashes randomly!!! Errors like this:
  (mawe.py:10556): Gtk-WARNING **: /build/gtk+3.0-2Ut_nl/gtk+3.0-3.18.9/./gtk/gtktextbtree.c:4034: byte index off the end of the line

  (mawe.py:10556): Gtk-ERROR **: Byte index 1362 is off the end of the line
  Trace/breakpoint trap

- DONE: Import .moe files to get content for testing

- DONE: Visible word/character counts from doc

- DONE: Initial configs (to save window size)

- DONE: Loading moe files in mawe format. Ready for saving.

- DONE: Add UUID to file format, so that project manager recognizes files even
  if they are moved.
  
- DONE: File loading

- DONE: Changed-mark: Ask to save modified files when exiting.

- DONE: # TODO: Track somehow if the file was really loaded from filename,
        # or if it was created when converting files. If Document was created
        # by conversion, still ask filename when attempting to save (although
        # we have here suggestion for it)

- DONE: (it is br now) psep (paragraph separator) is missing from the files! Maybe
  empty "<p />" is enough? It is not. We need a separator.

